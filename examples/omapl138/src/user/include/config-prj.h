//--------------------------------------------------------
//DJYOS components configuration file.
//This file is generated by "com.djyos.utilities" plugin
//Thu Aug 02 21:23:52 CST 2012
//--------------------------------------------------------

#ifndef __CONFIG_PRJ_H_
#define __CONFIG_PRJ_H_

#ifdef __cplusplus
extern "C" {
#endif


/*____与硬件相关的配置____*/
#define M 1000000
#define cfg_pll0_sysclk1 (400*M)
#define cfg_pll0_sysclk2 (cfg_pll0_sysclk1/2)
#define cfg_pll0_sysclk4 (cfg_pll0_sysclk1/4)
#define cfg_pll0_sysclk6 (cfg_pll0_sysclk1)
#define cfg_pll0_sysclk3 (100*M)
#define cfg_pll0_sysclk7 (50*M)
#define cfg_pll1_sysclk1 (150*M)
#define cfg_pll1_sysclk2 (150*M)
#define cfg_mclk cfg_pll0_sysclk1  //主频
#define cfg_aux_clk (25*M)  //timer、usb、iic、rtc、mcasp时钟
#define cfg_timer_clk cfg_aux_clk  //定时器时钟源
#define cfg_ddrii_clk 150  //以M为单位，omapl138最高支持150M

/*____定义tick参数____*/
#define cfg_tick_us 1000  //操作系统内核时钟脉冲长度，以us为单位。
#define cfg_tick_hz 1000  //内核时钟频率，单位为hz。
#define cfg_fine_us 0x00000a3d  //40nS,精密时钟脉冲长度，以uS为单位，32位定点数整数、小数各占16位，这也限制了ticks最长不超过65535uS
#define cfg_fine_hz (25*M)  //内核精密时钟频率，是cn_fine_ns的倒数。

/*____时间相关设置____*/
#define cfg_time_module 1  //是否包含时间模块
#define cfg_time_zone (+8)  //本地时区
#define cfg_time_src_tick 0  //内核嘀嗒脉冲做走时基准
#define cfg_time_src_rtc 1  //硬件rtc做走时基准
#define cfg_time_src cfg_time_src_tick  //选择走时基准

/*____cpu运行模式定义____*/
#define cn_mode_tiny 0  //tiny模式
#define cn_mode_si 1  //单映像模式
#define cn_mode_dlsp 2  //动态加载单进程模式
#define cn_mode_mp 3  //多进程模式，只有mmu=true才可选择此模式
#define cfg_run_mode cn_mode_si

/*____字符集，支持gui kernel，本组配置才有意义____*/
#define cfg_charset_gb2312 1  //gb2312编码
#define cfg_charset_ascii 0  //gb2312已经包含了ascii编码，无须再支持
#define cfg_charset_utf8 0  //unicode最流行的一种编码方式
#define cfg_charset_default "gb2312"  //此名字须与C文件中定义的字符集名字相同

/*____字体，支持gui kernel，本组配置才有意义____*/
#define cfg_gb2312_8x16_1616 1  //包含8*16点阵的ascii字符和16*16点阵的宋体汉字
#define cfg_ascii_8x8 1  //包含8*8点阵的ascii字符
#define cfg_ascii_8x16 0  //包含8*16点阵的ascii字符gb2312_816_1616中已经包含，无须单独定义
#define cfg_font_default "gb2312_8_16_1616"  //此名字须与C文件中使用的字体资源名字相同,

/*____gui kernel配置____*/
#define cfg_gui_kernel 1  //gui kernel模块
#define cfg_gk_down_chunnel_deep 1024  //控制命令缓存深度，字节数
#define cfg_gk_up_chunnel_deep 256  //gui kernel消息缓冲区长度，字节数
#define cfg_gui_pattern_mode 0  //模式位图尺寸，0=固定8*8位图，1=任意bitmap（V1.0.0不支持）

/*____数量控制____*/
#define cfg_device_limit 20  //定义设备数量。
#define cfg_locks_limit 20  //定义程序中可用的自由锁的数量。自由锁指用户调用semp_create和mutex_create创建的锁，不包括内核用到的锁。
#define cfg_events_limit 100  //事件数量
#define cfg_evtts_limit 32  //总事件类型数
#define cfg_paras_limit (cfg_events_limit+cfg_evtts_limit)  //事件参数数量，义了一个参数
#define cfg_wdts_limit 5  //允许养狗数量
#define cfg_pipes_limit 5  //管道数量

/*____与内存管理相关的常量____*/
#define cfg_virtual_memory 0  //2440硬件虽然支持虚拟内存，但SI版本不打算支持，设为0
#define cfg_phy_memoey 0  //物理内存总量，支持虚拟内存才有意义。
#define cfg_mmu_used 1  //使用MMU
#define cfg_cache_used 1  //使能Cache
#define cfg_page_size 0x1000  //基页尺寸为4Kbytes
#define cfg_page_size_suffix_zero 12  //页尺寸后缀0的个数
#define cfg_mem_recycle true  //支持内存回收----配置工具
#define cfg_mem_pools (10)  //允许建立10个内存池
#define cfg_syssvc_stack 1024  //系统服务事件栈容量
#define cfg_dynamic_mem 1  //是否支持高级内存分配，即使不支持，也允许使用malloc-free分配内存，但必须严格成对调用，否则会内存泄漏
#define cfg_stack_fill 'd'  //栈填充值，设为0则不填充
#define cfg_main_stack 1024  //main函数所需栈容量

/*____文件系统相关配置____*/
#define cfg_djyfs 0  //是否包含文件系统
#define cfg_djyfs_flash 0  //是否包含flash文件系统的驱动
#define cfg_fat_filesys 0  //是否包含flash文件系统的驱动
#define cfg_djyfs_ram 0  //是否包含ram文件系统
#define cfg_opened_fsnode_limit 16  //可同时打开的文件数量，注意多级路径的每一级都算一个文件，但相同的路径不重复算

/*____组件配置____*/
#define cfg_pan_driver 1  //是否包含泛设备驱动模块
#define cfg_debug_info 1  //调试信息收集与输出模块
#define cfg_shell 1  //是否包含shell模块
#define cfg_pipe 1  //是否包含管道通信模块
#define cfg_wdt 0  //是否包含看门狗驱动
#define cfg_nude_terminal 0  //nude terminal是一个在启动时提供最基本的人机对话功能的模块
#define cfg_djyip 0  //djyip 模块

/*____标准输入模块配置____*/
#define cfg_keyboard 1  //是否包含键盘驱动
#define cfg_single_touch 0  //是否支持单点触摸屏
#define cfg_muti_touch 0  //是否支持多点触摸屏
#define cfg_muti_keyboard 0  //0=不支持多键盘，即使系统拥有多键盘，所有键盘也不加区分地使用
#define cfg_muti_mouse_2d 0  //0=不支持多鼠标，即使系统拥有多个鼠标，所有鼠标也共享同一个鼠标指针。
#define cfg_muti_mouse_3d 0  //0=不支持多3d鼠标，即使系统拥有多个3d鼠标，所有鼠标也共享同一个鼠标指针。
#define cfg_stdin_device "uart1"  //标准输入设备
#define cfg_stdin_device_limit 3  //可支持的输入设备数量

/*____外设配置____*/
#define cfg_uart0_used 0
#define cfg_uart1_used 1
#define cfg_uart2_used 0

/*____工作路径设置____*/
#define cfg_work_path "sys:\\"  //工作路径设置用户不设置的话，set_work_path就是空字符

#ifdef __cplusplus
}
#endif
#endif

